function jobs = streamfmri_e5_gab_setup(subs)
%master function (like old subject_info scripts) that control creation of
%job structs for a given study. In this case, the streaming study by KH
%06/09. Resulting 'jobs' structure should be ready for running by gab
%scripts.

%default group entry
allsubs={'s2703','s2718','s2721','s2727','s2731','s2732','s2739','s2740','s2743','s2745','s2750','s2752','s2753'};
if ~exist('subs','var') || isempty(subs)
    subs=allsubs;
end
    
if ~iscell(subs) %if subs is just a single subjectID, put it in a cell
    subs={subs};
end

%Study variable defaults
studyDir='/home/khill/projects/streamfmri/exp5'; %for fMRI, you need to do full path with no ~ as spm can't handle it
TR=2;

%%BEGIN SUBJET JOBS
jobs={};
for s=1:length(subs)
    subDir=fullfile(studyDir,subs{s});
    epid={fullfile(subDir,'epi','epi1'),... %list all of the epi dirs that will be created for this subject
          fullfile(subDir,'epi','epi2'),...
          fullfile(subDir,'epi','epi3'),...
          fullfile(subDir,'epi','epi4'),...
          fullfile(subDir,'epi','epi5'),...
          fullfile(subDir,'epi','epi6')};
    
    %%%SETUP DEFAULTS%%%
    
%% Unpack job%%%
    unpack=gab_emptyjob;
    unpack.jobName='unpack';
    unpack.jobDir=fullfile(subDir, 'jobs');
    unpack.task{end+1}=struct(...
        'func',@gab_task_unpack,...
        'args',struct(...
            'source',fullfile(studyDir,'raw',[subs{s} '.tar.gz']),...
            'destination',{{fullfile(subDir, 'dcm'), fullfile(subDir,'behavior'), fullfile(subDir,'setup')}},...
            'filter',{{'*.dcm', '*.log', '*.txt'}},...
            'options',{{'--strip-components=1', '', ''}}));
    %%%Convert from dicom to nifti%%%
    unpack.task{end+1}=struct(...
        'func',@gab_task_fmri_dcm2nii,...
        'args',struct(...
            'base',fullfile(subDir,'dcm'),...
            'sessions',{{9 3:8}})); %defaults puts first group as mprage and sec group as epis
        
%% Preprocessing job%%%
    preproc=gab_emptyjob;
    preproc.jobName='preproc';
    preproc.jobDir=fullfile(subDir, 'jobs');
    preproc.parent={fullfile(unpack.jobDir,[unpack.jobName '.mat'])};
    %%%slice timing correction for the epis%%%%
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_slice_timing,...
        'args',struct(...
            'data',{epid},...
            'TR',2,...
            'so',[2:2:36 1:2:35]));
    %%%Realing all the epis to the first one%%%%
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_realign,...
        'args',struct(...
            'data',{epid}));
    %%%Coregister mprage to template%%%
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_coreg,...
        'args',struct(...
            'ref','/home/khill/code/spm8/canonical/avg152T1.nii',...
            'source',fullfile(subDir,'anatomy','mprage.nii')));
    %%%Coregister an epi to the mprage then use that to coreg the rest%%%
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_coreg,...
        'args',struct(...
            'ref',fullfile(subDir,'anatomy','mprage.nii'),...
            'source',fullfile(subDir,'epi','epi1','ra001.nii'),...
            'other',{epid}));
    %%%Segment and normalize
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_segment,...
        'args',struct(...
            'source',fullfile(subDir,'anatomy','mprage.nii'),...
            'gmFiles',[0 0 1],... %write 2mm vox 'modulated' image, but not the normalized but small vox or native space gm mask
            'wmFiles',[0 0 0])); % by default, spm also outputs a wm mask, which we don't need
    %%%Skull Strip the bias corrected mprage
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_skull_strip,...
        'args',struct(...
            'file',fullfile(subDir,'anatomy','mmprage.nii'))); 
    %%%Normalise skull stripped mprage and epis
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_norm_write,...
        'args',struct(...
            'matname',fullfile(subDir,'anatomy','mprage_seg_sn.mat'),...
            'resample',{{fullfile(subDir,'anatomy','ss_mmprage.nii') fullfile(subDir,'anatomy','c1mprage.nii') epid{:}}},...
            'bb',[-86 -110 -66; 86 86 100],...
            'vox',[3.4 3.4 3.4]));
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_norm_write,...
        'args',struct(...
            'matname',fullfile(subDir,'anatomy','mprage_seg_sn.mat'),...
            'resample',{{fullfile(subDir,'anatomy','ss_mmprage.nii')}},...
            'bb',[-86 -110 -66; 86 86 100],...
            'vox',[1 1 1],...
            'prefix','hrw'));
    %%%Make whole brain mask
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_make_mask,...
        'args',struct(...
            'file',fullfile(subDir,'anatomy','wss_mmprage.nii'),...
            'thresh',.3,...
            'outputName',fullfile(subDir,'anatomy','WBmask.nii')));
    %%%Make Grey matter mask
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_make_mask,...
        'args',struct(...
            'file',fullfile(subDir,'anatomy','wc1mprage.nii'),...
            'thresh',.3,...
            'outputName',fullfile(subDir,'anatomy','GMmask.nii')));
    %%%Smooth the epis
    preproc.task{end+1}=struct(...
        'func',@gab_task_fmri_smooth,...
        'args',struct(...
            'data',{epid},...
            'fwhm',[8 8 8]));
    %%%Clean up crap
    preproc.task{end+1}=struct(...
        'func',@gab_task_cleanup,...
        'args',struct(...
            'dir',{epid},...
            'filt','[!012sw]*.nii'));
        
    %%%make hi res brain and study thankyour .bmps
    thankyou=gab_emptyjob;
    thankyou.jobName='thankyou';
    thankyou.jobDir=fullfile(subDir, 'jobs');
    thankyou.parent={fullfile(preproc.jobDir,[preproc.jobName '.mat'])};
    thankyou.task{end+1}=struct(...
        'func',@gab_task_fmri_study_thankyou,...
        'args',struct(...
            'file',fullfile(subDir,'anatomy','mmprage.nii'),...
            'bb',[-90 90; -130 100; -90 110],...
            'vox',[1 1 1]));
                
        
%% same as the last, but with smoothed data%%%
    smoothedModel=gab_emptyjob;
    smoothedModel.jobName='smoothedModel';
    smoothedModel.jobDir=fullfile(subDir, 'jobs');
    smoothedModel.parent={fullfile(preproc.jobDir,[preproc.jobName '.mat'])};  
    %%%Turn presentation log files into spm covariate .mat %%%
    smoothedModel.task{end+1}=struct(...
        'func',@streamfmri_e5_build_percDiffModel_covs,...
        'args',struct(...
            'TR',TR,...
            'files',{{fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5a.log']),...
                      fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5b.log']),...
                      fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5c.log']),...
                      fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5d.log']),...
                      fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5e.log']),...
                      fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5f.log'])}}));
    %%%Run model%%%
    smoothedModel.task{end+1}=struct(...
        'func',@gab_task_fmri_run_model,...
        'args',struct(...
            'dir',fullfile(subDir,'analysis','smoothedModel'),...
            'units','secs',...
            'TR',TR,...
            'scans',{epid},...
            'scanFilt','^swra.*\.nii',...
            'covariates',fullfile(subDir,'behavior'),...
            'covFilt','^percDiffModel_sess\dcovs\.mat',...
            'nuisance',{epid},...
            'nuFilt','^rp_a001\.txt',...
            'bases','hrf',...
            'mask',fullfile(subDir,'anatomy','WBmask.nii')));
        
    %%%smoothedModel contrasts%%%
    smoothedModelCon=gab_emptyjob;
    smoothedModelCon.jobName='smoothedModelCon';
    smoothedModelCon.jobDir=fullfile(subDir, 'jobs');
    smoothedModelCon.parent={fullfile(smoothedModel.jobDir,[smoothedModel.jobName '.mat'])};  
    %Main effect of Sound
    smoothedModelCon.task{end+1}=struct(...
        'func',@gab_task_fmri_make_con,...
        'args',struct(...
            'sessrep','repl',...
            'spmmat',fullfile(subDir,'analysis','smoothedModel','SPM.mat'),...
            'conName',{{'Sound'}},...
            'stat','T',...
            'convec',{{[1 0 1]}}));
    %LRL vs RLR
    smoothedModelCon.task{end+1}=struct(...
        'func',@gab_task_fmri_make_con,...
        'args',struct(...
            'sessrep','repl',...
            'delete', 0,...
            'spmmat',fullfile(subDir,'analysis','smoothedModel','SPM.mat'),...
            'conName',{{'Sound'}},...
            'stat','T',...
            'convec',{{[1 0 -1]}}));
    %Perception
    smoothedModelCon.task{end+1}=struct(...
        'func',@gab_task_fmri_make_con,...
        'args',struct(...
            'sessrep','repl',...
            'delete',0,...
            'spmmat',fullfile(subDir,'analysis','smoothedModel','SPM.mat'),...
            'conName',{{'Perception'}},...
            'stat','T',...
            'convec',{{[0 1 0 1]}}));
%     %Mahalanobis Distance test
%     smoothedModelCon.task{end+1}=struct(...
%         'func',@gab_task_fmri_infsl,...
%         'args',struct(...
%             'delete',0,...
%             'spmmat',fullfile(subDir,'analysis','smoothedModel','SPM.mat'),...
%             'conName',{{'Perception'}},...
%             'convec',{{[0 1 0 1]}},...
%             'slRmm',9,...
%             'mask',fullfile(subDir,'anatomy','GMmask.nii')));
%     %%%Make whole brain mask
%     smoothedModelCon.task{end+1}=struct(...
%         'func',@gab_task_fmri_make_mask,...
%         'args',struct(...
%             'file',fullfile(subDir,'analysis','smoothedModel','spmF_0001.img'),...
%             'thresh',100,...
%             'outputName',fullfile(subDir,'analysis','smoothedModel','sndMask.nii')));

%% Build model where perceptual differences inside blocks are coded into regressors%%%
    unsmoothedModel=gab_emptyjob;
    unsmoothedModel.jobName='unsmoothedModel';
    unsmoothedModel.jobDir=fullfile(subDir, 'jobs');
    unsmoothedModel.parent={fullfile(smoothedModel.jobDir,[smoothedModel.jobName '.mat'])};    
    %%%Run model%%%
    unsmoothedModel.task{end+1}=struct(...
        'func',@gab_task_fmri_run_model,...
        'args',struct(...
            'dir',fullfile(subDir,'analysis','unsmoothedModel'),...
            'units','secs',...
            'TR',TR,...
            'scans',{epid},...
            'covariates',fullfile(subDir,'behavior'),...
            'covFilt','^percDiffModel_sess\dcovs\.mat',...
            'nuisance',{epid},...
            'nuFilt','^rp_a001\.txt',...
            'bases','hrf',...
            'mask',fullfile(subDir,'anatomy','WBmask.nii')));
        
%% Change these for subject specific modifications to the general plan.
    switch subs{s}
        
        %%ADD SUBJECT SPECIFIC INFO HERE
        
        case 's2718'
            unpack.task{2}.args.sessions={12 [4:6 9:11]};
            smoothedModel.task{1}.args.files{1}=fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5a1.log']);
            
        case 's2721'
            smoothedModel.task{1}.args.files{5}=fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5e1.log']);
        
        case 's2727'
            unpack.task{2}.args.sessions={10 4:9}; %first epi needed to be redone (no sound)
            smoothedModel.task{1}.args.files{1}=fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5a1.log']);
            
        case 's2739'
            unpack.task{2}.args.sessions={11 5:10};
            smoothedModel.task{1}.args.files{1}=fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5a1.log']);
            
        case 's2750'
            unpack.task{2}.args.sessions={12 [3 6:9 11]};
            smoothedModel.task{1}.args.files{2}=fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5b2.log']);
            
        case 's2753'
            smoothedModel.task{1}.args.opt='-s2753';
            
        case 's2755'
            unpack.task{2}.args.sessions={10 4:9};
            smoothedModel.task{1}.args.files{1}=fullfile(subDir,'behavior',[subs{s} '-streamfmri-e5a1.log']);
            
            
    end

%% Put the Jobs together
    jobs{end+1}=unpack;
    jobs{end+1}=preproc;
    jobs{end+1}=thankyou;
    jobs{end+1}=smoothedModel;
    jobs{end+1}=smoothedModelCon;
    jobs{end+1}=unsmoothedModel;

end

%% BEGIN GROUP JOBS
groupDir=fullfile(studyDir,'group');

%first group, all good subjects:
group=allsubs;
allsubs=gab_emptyjob;
allsubs.jobName='allsubs';
allsubs.jobDir=fullfile(groupDir,allsubs.jobName, 'jobs');
for s=1:length(group);
    allsubs.parent{end+1}=fullfile(studyDir,group{s},'jobs','smoothedModelCon.mat');
end
allsubs.task{end+1}=struct(...
    'func',@streamfmri_e5_gab_group,...
    'args',struct('subs',{group},'studyDir',studyDir));

jobs{end+1}=allsubs;



function x = insert(x,y,i)
%simple little function to insert y into x at index i and return the new x.
%used to insert tasks into a task list

if i==1;
    x = [y x];
elseif i>length(x);
    x=[x y];
else
    x=[x(1:i-1) y x(i:end)];
end

